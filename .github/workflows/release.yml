name: Release Workflow

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release Binaries
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Rust
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      # Cache Cargo dependencies
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      # Build the application
      - name: Build the application
        run: cargo build --release --target ${{ matrix.target }}

      # Rename the binary to include the OS in the filename
      - name: Rename binary (Windows)
        if: runner.os == 'windows-latest'
        run: |
          ren target\${{ matrix.target }}\release\le-ptit-terminal.exe le-ptit-terminal-windows.exe

      - name: Rename binary (Ubuntu)
        if: runner.os == 'ubuntu-latest'
        run: |
          mv target/${{ matrix.target }}/release/le-ptit-terminal target/${{ matrix.target }}/release/le-ptit-terminal-ubuntu

      - name: Rename binary (macOS)
        if: runner.os == 'macos-latest'
        run: |
          mv target/${{ matrix.target }}/release/le-ptit-terminal target/${{ matrix.target }}/release/le-ptit-terminal-macos

      # Upload the binary as an artifact
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          if-no-files-found: ignore
          path: target/${{ matrix.target }}/release/le-ptit-terminal-*

  upload-release-assets:
    name: Upload Release Assets
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
      # Download all artifacts from the build jobs
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries

      # Upload binaries as release assets
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            binaries/x86_64-unknown-linux-gnu-binary/le-ptit-terminal-ubuntu
            binaries/x86_64-apple-darwin-binary/le-ptit-terminal-macos
            binaries/x86_64-pc-windows-msvc-binary/le-ptit-terminal-windows.exe
